/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Student;

/**
 *
 * @author Mark
 */
public class Task {
    /*
    1. Создать класc, хранящий следующую информацию о студентах :

    Фамилия (String)
    Оценка по 1-ому предмету (int)
    Оценка по 2-ому предмету (int)
    Переведен на следующий курс (boolean) 

    И реализующий следующие возможности:

    1. Создание студента с заданными данными.(1 балл)
2. Создание копии информации о студенте.(1 балл)
    3. Выдача информации о заданном студенте на экран.(1 балл)
    4. Нахождение среднего балла конкретного студента.(1 балл)
    5. Выбор из двух студентов более успешного и выдача на экран его фамилии.(1 балл)
    6. Для заданного студента выдача на экран сообщение переведен ли он на следующий курс. (1 балл)

    Учесть что:

    7. Оценки являются закрытой информацией, не подлежащей изменению вне класса напрямую.(1 балл)
    8. При занесении данных, оценки должны проверяться на корректность (мах и мin допустимых 
    значений задать как константы класса).(2 балла)
    9. Установка значений в поле перевода на следующий курс решается автоматически(программно) исходя 
    из оценок студента за сессию и минимального значения проходного балла, заданного как константа класса.(1 балл)
10. Студент переводится, если у него "сданы" ВСЕ предметы и его средний балл не меньше 3.0. 
При "пересдаче",при необходимости должен меняться средний балл и значение поля "Переведен на следующий курс"(3 балла)

    ИТОГО (14 баллов)
    
    
    
    

        2. Используя тип данных "Student", создать класс "Group" , хранящий

    номер группы
    список студентов ввиде массива 

    Класс должен реализовывать след. методы:

    1. просмотр информации о группе (о всех студентах )(1 балл)
    2. добавление нового студента в группу (2 балла)
    // 9. удаление студента из группы (2 балла)
    3. поиск и просмотр информации о студенте по его фамилии (2 балла)
    4. поиск всех студентов группе , переведенных на следующий курс (2 балла)
    5. нахождение среднего балла группы (2 балла)
    6. выдача на экран фамилии самого успешного студента группы (3 балла)
    7. вывод на экран студентов, у которых есть задолжность по одному предмету (2 балла)
    8. вывод на экран студентов группы, чей личный средний балл выше среднего балла группы (2 балла)

    ИТОГО (19 баллов)

    3. В новом классе DemoStudentsGroup :

    1. создать 2 группы студентов по 5 человек в каждой. (1 балл)
    2. напечатать их состав (1 балл) 
    3. Определить группу с лучшей успеваемостью (1 балл)
    4. Определить группу где учится студент с самой высокой успеваемостью (2 балл)
5. Вывести на экран фамилии 3-х лучших студентов каждой группы (5 балл)
    6. Определить кол-во должников в 1 группе (2 балл)
    7. Вывести на экран студентов 2-ой группы, чей личный средний балл выше среднего балла группы (2 балл)

ИТОГО (14 баллов)

    */
    
}
